/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import userinterface.RestaurantAdminRole.AdminWorkAreaJPanel;
import static userinterface.RestaurantAdminRole.OrderManage.infoBox;

/**
 *
 * @author raunak
 */
public class CommentJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    
   
    
    private JSplitPane splitPanel;
    private UserAccount ua;
    private EcoSystem ecosystem;
    /**
     * Creates new form RequestLabTestJPanel
     */
    public CommentJPanel(JSplitPane splitPanel, UserAccount ua,EcoSystem ecosystem) {
        initComponents();
        
        this.splitPanel = splitPanel;
        this.ua = ua;
        
        this.ecosystem = ecosystem;
        
       
         preWork(ua);
       
        populateTable();
    }
    
    
    void preWork(UserAccount ua){
         customerName.setText(ua.getUsername());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Find = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comments = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        idShow = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ShowOrderList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        requestTestJButton1 = new javax.swing.JButton();
        ListAll = new javax.swing.JButton();
        IdInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        customerName = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Find.setText("Find");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });
        add(Find, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, -1));

        jLabel1.setText("order id:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, -1, -1));

        comments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentsActionPerformed(evt);
            }
        });
        add(comments, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 110, 20));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        idShow.setText("id");
        add(idShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 130, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Customer:");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 120, 30));

        ShowOrderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Deliver", "Resturant", "Items", "Price", "Status", "Comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ShowOrderList);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 670, 100));

        jLabel2.setText("Comment:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, -1, -1));

        requestTestJButton1.setText("Comment");
        requestTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButton1ActionPerformed(evt);
            }
        });
        add(requestTestJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 170, -1));

        ListAll.setText("List all");
        ListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListAllActionPerformed(evt);
            }
        });
        add(ListAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        IdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdInputActionPerformed(evt);
            }
        });
        add(IdInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 89, 20));

        jLabel3.setText("order id");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        customerName.setText("<value>");
        add(customerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
          String id = IdInput.getText();
        
        if(!isValid(id)){
              infoBox("Invalid Id data type, please check", "Invalid"); return;
         } 
        
        Order order = ecosystem.getOrderDirectory().getOrderByOrderId(id, ecosystem.getOrderDirectory().getOrderList());
        if(order != null){
              populateTable(order);
              showInformation(order);     
        }else{
           infoBox("Id not exist, please check", "Invalid"); return;
        }
        
        
    }//GEN-LAST:event_FindActionPerformed
   private void showInformation(Order order) {
             if(order!=null){
                 idShow.setText(order.getOrderId()); 
             }
    }
    public void populateTable(){
        
 
        DefaultTableModel orderModel = (DefaultTableModel) ShowOrderList.getModel();
     
        orderModel.setRowCount(0);
           
        List<Order> list = ecosystem.getOrderDirectory().getOrderListByUserAndFinished(ua.getUsername(), ecosystem.getOrderDirectory().getOrderList());
         
          for(Order order:list){
            Object[] row = new Object[7];

            StringBuffer sb = new StringBuffer();
            
            System.out.print(order.getStatus()+"sta");
            
            for(String item:order.getMenu().keySet()){
                  sb.append(item+":");
                  sb.append(order.getMenu().get(item)+"  ");
            }
            
            row[0] = order.getOrderId();
            row[1] = order.getDeliver();
            row[2] = order.getRestaurant();
            row[3] = sb.toString();
            row[4] = order.getTotalPrice();
            row[5] = order.getStatus();
            row[6] = order.getComment();
            orderModel.addRow(row);
         }
    }
 public void populateTable(Order order){
        
 
        DefaultTableModel orderModel = (DefaultTableModel) ShowOrderList.getModel();
     
        orderModel.setRowCount(0);
           
           Object[] row = new Object[7];

            StringBuffer sb = new StringBuffer();
            
            System.out.print(order.getStatus()+"sta");
            
            for(String item:order.getMenu().keySet()){
                  sb.append(item+":");
                  sb.append(order.getMenu().get(item)+"  ");
            }
            
            row[0] = order.getOrderId();
            row[1] = order.getDeliver();
            row[2] = order.getRestaurant();
            row[3] = sb.toString();
            row[4] = order.getTotalPrice();
            row[5] = order.getStatus();
            row[6] = order.getComment();   
            
            orderModel.addRow(row);
           
       
    }
     private boolean isValid(String s){
        return s.matches("^[A-Za-z0-9]+$");
    }
     private boolean isValidString(String s){
        return s.matches("^[a-zA-Z]*$");
    }
     private boolean isValidInt(String s){
        return s.matches("^[0-9]*$");
    }
    private boolean isValidDeliverName(String s){
        return ecosystem.getUserAccountDirectory().checkIfUsernameIsUnique(s);
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
                UserAccount user = ecosystem.getUserAccountDirectory().getUserAccountByName(ua.getUsername());
                
                CustomerAreaJPanel customerAreaJPanel = new CustomerAreaJPanel(splitPanel,user,ecosystem);
                splitPanel.setRightComponent(customerAreaJPanel);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void commentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentsActionPerformed

    private void requestTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButton1ActionPerformed

        String comment = comments.getText();
        if(comment.length()>0){
            String id = idShow.getText();

            if(id.equals("id")){
               infoBox("Invalid Id data type, please check", "Invalid"); return;
            } 
        
          Order order = ecosystem.getOrderDirectory().getOrderByOrderId(id, ecosystem.getOrderDirectory().getOrderList());
          
          if(order!=null){
              order.setComment(comment);
               populateTable(order); 
              infoBox("comments success!", "Success"); return;  
          }
            
        }else{
            infoBox("comments null!, please check", "Invalid"); return;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_requestTestJButton1ActionPerformed

    private void ListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListAllActionPerformed
            populateTable();            
        // TODO add your handling code here:
    }//GEN-LAST:event_ListAllActionPerformed

    private void IdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdInputActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Find;
    private javax.swing.JTextField IdInput;
    private javax.swing.JButton ListAll;
    private javax.swing.JTable ShowOrderList;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField comments;
    private javax.swing.JLabel customerName;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel idShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton requestTestJButton1;
    // End of variables declaration//GEN-END:variables
}
