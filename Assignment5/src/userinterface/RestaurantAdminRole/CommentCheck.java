/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Organization;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import userinterface.RestaurantAdminRole.AdminWorkAreaJPanel;
import static userinterface.RestaurantAdminRole.OrderManage.infoBox;

/**
 *
 * @author raunak
 */
public class CommentCheck extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    
   
    
    private JSplitPane splitPanel;
    private Restaurant ua;
    private EcoSystem ecosystem;
    /**
     * Creates new form RequestLabTestJPanel
     */
    public CommentCheck(JSplitPane splitPanel, Restaurant ua,EcoSystem ecosystem) {
        initComponents();
        
        this.splitPanel = splitPanel;
        this.ua = ua;
        
        this.ecosystem = ecosystem;
        

        populateTable();
    }
    
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ShowOrderList = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 120, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Customer Comments");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 230, 30));

        ShowOrderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Deliver", "Resturant", "Items", "Price", "Status", "Comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ShowOrderList);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 670, 100));
    }// </editor-fold>//GEN-END:initComponents
  
    public void populateTable(){
        
 
        DefaultTableModel orderModel = (DefaultTableModel) ShowOrderList.getModel();
     
        orderModel.setRowCount(0);
        
           
        List<Order> list = ecosystem.getOrderDirectory().getOrderListByRestAndFinished(ua.getName(), ecosystem.getOrderDirectory().getOrderList());
        
        
          for(Order order:list){
            Object[] row = new Object[7];

            StringBuffer sb = new StringBuffer();
  
            for(String item:order.getMenu().keySet()){
                  sb.append(item+":");
                  sb.append(order.getMenu().get(item)+"  ");
            }
            
            row[0] = order.getOrderId();
            row[1] = order.getDeliver();
            row[2] = order.getRestaurant();
            row[3] = sb.toString();
            row[4] = order.getTotalPrice();
            row[5] = order.getStatus();
            row[6] = order.getComment();
            orderModel.addRow(row);
         }
    }
 
     private boolean isValid(String s){
        return s.matches("^[A-Za-z0-9]+$");
    }
     private boolean isValidString(String s){
        return s.matches("^[a-zA-Z]*$");
    }
     private boolean isValidInt(String s){
        return s.matches("^[0-9]*$");
    }
    private boolean isValidDeliverName(String s){
        return ecosystem.getUserAccountDirectory().checkIfUsernameIsUnique(s);
    }
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
                UserAccount user = ecosystem.getUserAccountDirectory().getUserAccountByName(ua.getName());
                
                AdminWorkAreaJPanel adminPanel = new AdminWorkAreaJPanel(splitPanel,ecosystem,user);
                splitPanel.setRightComponent(adminPanel);
        
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ShowOrderList;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
