/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.Car;
import model.CarFleet;

/**
 *
 * @author Animal
 */
public class CreatePanel extends javax.swing.JPanel {

    private CarFleet fleet;
    
    
    /**
     * Creates new form CreatPanel
     */
    public CreatePanel() {
        initComponents();
    }
    
    public CreatePanel(CarFleet fleet){
        this.fleet = fleet;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblBrand = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblManufacTime = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblSerial = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblAvailTime = new javax.swing.JLabel();
        lblMaintExpTime = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtManufacTime = new javax.swing.JTextField();
        txtSeats = new javax.swing.JTextField();
        txtSerial = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtAvailTime = new javax.swing.JTextField();
        txtMaintExpTime = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Car");

        lblBrand.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBrand.setText("Car Brand:");
        lblBrand.setPreferredSize(new java.awt.Dimension(15, 15));

        lblModel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblModel.setText("Car Model:");

        lblManufacTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblManufacTime.setText("Manufacture Time:");

        lblSeats.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSeats.setText("Seats ");

        lblSerial.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSerial.setText("Serial Number:");

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("Available City:");

        lblAvailTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAvailTime.setText("Available Time:");

        lblMaintExpTime.setText("Maintenance Expire Time:");

        txtBrand.setToolTipText("");
        txtBrand.setAlignmentX(1.0F);
        txtBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrandActionPerformed(evt);
            }
        });

        txtSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeatsActionPerformed(evt);
            }
        });

        txtSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblManufacTime, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSeats)
                            .addComponent(lblSerial)
                            .addComponent(lblMaintExpTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtSerial, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                            .addComponent(txtSeats))
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblAvailTime, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(4, 4, 4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                            .addComponent(txtManufacTime))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblModel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(txtModel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAvailTime, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(txtMaintExpTime, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAvailTime, lblBrand, lblMaintExpTime, lblSeats, lblSerial});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMaintExpTime, txtSeats, txtSerial});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManufacTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManufacTime))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerial)
                    .addComponent(txtSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvailTime)
                    .addComponent(txtAvailTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintExpTime)
                    .addComponent(txtMaintExpTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean timeValid(String s){
        if(Integer.valueOf(s.split(" ")[1])>=24) return false;
             
        return s.matches("\\d{2}/\\d{2}/\\d{4} \\d{2}");
    }
  
    private boolean isValidBrand(String s){
        return s.matches("^[A-Za-z0-9]+$");
    }
    private boolean isValidCity(String s){
        return s.matches("^[A-Za-z0-9]+$");
    }
    private boolean isValidModel(String s){
        return s.matches("^[A-Za-z0-9]+$");
    }
    private boolean isValidSeats(String s){
        return s.matches("\\d") || s.matches("\\d{2}");
    }
    private boolean isValidSerial(String s){
        ArrayList<Car> carList = fleet.getCarList();
        for(int i = 0;i < carList.size(); i++){
            if (s.equals(carList.get(i).getSerialNumber())){
                return false;
            }
        }
        return s.matches("^[A-Za-z0-9]+$");
    }
    
    private boolean typeCheck(){
        boolean flag = true;
        String check;
        
        check = txtAvailTime.getText();
        if(!timeValid(check)){
            txtAvailTime.setText("");
            flag = false;
        }
        check = txtMaintExpTime.getText();
        if(!timeValid(check)){
            txtMaintExpTime.setText("");
            flag = false;
        }
        check = txtManufacTime.getText();
        if(!timeValid(check)){
            txtManufacTime.setText("");
            flag = false;
        }
        check = txtBrand.getText();
        if(!isValidBrand(check)){
            txtBrand.setText("");
            flag = false;
        }
        check = txtCity.getText();
        if(!isValidCity(check)){
            txtCity.setText("");
            flag = false;
        }
        check = txtModel.getText();
        if(!isValidModel(check)){
            txtModel.setText("");
            flag = false;
        }
        check = txtSeats.getText();
        if(!isValidSeats(check)){
            txtSeats.setText("");
            flag = false;
        }
        check = txtSerial.getText();
        if(!isValidSerial(check)){
            txtSerial.setText("");
            flag = false;
        }
        return flag;
    }
public static void infoBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null, infoMessage, "InfoBox: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(typeCheck()){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy HH");
       
        LocalDateTime availTime = LocalDateTime.parse(txtAvailTime.getText(),formatter);
        String brand = txtBrand.getText();
        String city = txtCity.getText();
        LocalDateTime maintExpTime = LocalDateTime.parse(txtMaintExpTime.getText(),formatter);
        LocalDateTime manufacTime = LocalDateTime.parse(txtManufacTime.getText(),formatter);
        String model = txtModel.getText();
        int seats = Integer.parseInt(txtSeats.getText());
        String serial = txtSerial.getText();
        
        Car newCar = new Car();
        newCar.setAvailableTime(availTime);
        newCar.setCarBrand(brand);
        newCar.setCarModel(model);
        newCar.setManufactureTime(manufacTime);
        newCar.setSeatsForPassenger(seats);
        newCar.setSerialNumber(serial);
        newCar.setAvailableCity(city);
        newCar.setMaintenanceExpireTime(maintExpTime);
        fleet.add(newCar);
        
        infoBox("Saved successfully", "Success");
        
        txtAvailTime.setText("");
        txtBrand.setText("");    
        txtCity.setText("");     
        txtMaintExpTime.setText("");     
        txtManufacTime.setText("");    
        txtModel.setText("");    
        txtSeats.setText("");
        txtSerial.setText("");
        }else {
            infoBox("Invalid data type, please check", "Invalid");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrandActionPerformed

    private void txtSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatsActionPerformed

    private void txtSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblAvailTime;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblMaintExpTime;
    private javax.swing.JLabel lblManufacTime;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAvailTime;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMaintExpTime;
    private javax.swing.JTextField txtManufacTime;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtSeats;
    private javax.swing.JTextField txtSerial;
    // End of variables declaration//GEN-END:variables

}
